# This script tests the workflow dispatch, and also tests to see if you can use
# python as a shell and just drop the contents directly into the run command,
# with multiple lines.
#
# Note: This could also be done with a shell script, but I wanted to limit the
# number of files required to see to understand the entire workflow.
#
# Test run with curl:
#
#  curl -XPOST \
#   -u $GITHUB_USER:$GITHUB_ACCESS_TOKEN \
#   -H "Accept: application/vnd.github.v3+json" \
#   -H "Content-Type: application/json" https://api.github.com/repos/KyleJamesWalker/action-playground/actions/workflows/dispatch_release.yaml/dispatches \
#   --data '{"ref": "master", "inputs": {"app_name": "test-app", "tag": "v1.2.3"}}'
#
# Test the run with gh cli:
#
#   gh workflow run dispatch_release.yaml --json << EOF
#   {"app_name": "test-app", "tag": "v1.2.3"}
#   EOF
name: dispatch_release

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: The name of the application.
        required: true
      tag:
        description: The semver image tag to use.
        required: true

jobs:
  python_execute:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout apps repository
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          pip install -U PyYAML

      - name: Simple python script
        shell: python
        env:
          APP_NAME: ${{ github.event.inputs.app_name }}
          TAG: ${{ github.event.inputs.tag }}
        run: |
          # Search for all container.image.name values up to one level deep
          import os
          import yaml

          def is_container_image_name_here(node):
              """Check if this node contains a value to replace"""
              return 'name' in node.get('container', {}).get('image', {})

          r = yaml.safe_load("""---
          top-app-name-1:
            container:
              image:
                name: org/app-name:v0.0.1
          top-app-name-2:
            container:
              image:
                name: org/app-name:v0.0.1
          container:
              image:
                name: org/app-name:v0.0.1
          """)

          # Check the root node
          if is_container_image_name_here(r):
              r['container']['image']['name'] = f"org/{os.environ['APP_NAME']}:{os.environ['TAG']}"

          # Check all possible sub-charts
          for key in r:
            if is_container_image_name_here(r[key]):
              r[key]['container']['image']['name'] = f"org/{os.environ['APP_NAME']}:{os.environ['TAG']}"

          print(yaml.dump(r))
